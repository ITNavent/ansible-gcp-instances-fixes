---

###gcp-instances-fixes###

# NOTA: estos fixes son por problemas que hemos tenido con las instancias en GCP en diferentes situacion como despues de reiniciar, conectarse mucho por SSH, etc.
# NOTA2: trato de siemrpe guardar el log en un envar y despues guardarla en el disco duro, ya que peude psar que se eliminen los archivos de logs o que directamente no se grabe por alguna falla como que este en modo "read-only". Estas variables se pisan en cada reinicio de la maquina.

# Fix para problema de read only filesystem  en instancias GCP
# NOTA: puede confundir un poco las redireccion a logs en el cron, pero basicamente ejecuta: mount -v -o remount,rw /
# NOTA2: esto se debe ejecutar antes que todo lo demas porque sino falla todo.
# NOTA3: de esta operacion 1ro se guarda un log en memoria y despues desde ahi se guarda en el sistema de archivos, ya que sino fallaria si el sistema de archivos esta en modo Read Only.

- 
  name: "Fix RO filesystem - Remount filesystem with read-write mode"
  become: yes #sudo
  mount:
    src: "{{gcp_inst_fix_rofs_src}}"
    path: "{{gcp_inst_fix_rofs_path}}"
    fstype: "{{gcp_inst_fix_rofs_fstype}}"
    opts: remount,rw
    state: mounted
  when:
    - gcp_inst_fix_readonly_filesystem is defined
    - gcp_inst_fix_readonly_filesystem == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla

-
  name: "Fix RO filesystem - Schedule Remount filesystem with read-write mode at Reboot"
  become: yes #sudo
  cron:
    name: gcp-readonly-filesystem-fix
    state: present
    special_time: reboot
    job: sleep {{gcp_inst_fix_readonly_filesystem_sleep}}; NAVENT_LOG_SCHEDULE_READONLY_FILESYSTEM_FIX=`mount -v -o remount,rw / 2>&1`; echo $NAVENT_LOG_SCHEDULE_READONLY_FILESYSTEM_FIX > "/tmp/schedule-gcp-readonly-filesystem-fix-`date +%Y-%m-%d-%H-%M-%S`.log";
  when:
    - gcp_inst_fix_readonly_filesystem is defined
    - gcp_inst_fix_readonly_filesystem == true
    - gcp_inst_fix_readonly_filesystem_schedule is defined
    - gcp_inst_fix_readonly_filesystem_schedule == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla

- 
  name: "Fix RO filesystem - Add /etc/fstab line"
  lineinfile:
    path: /etc/fstab
    line: "/dev/sda1 / ext4 remount,rw 0 0"
    create: yes
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla



# Fix para problema de SSH timeout en instancias GCP debido al sshguard
# NOTA: puede confundir un poco las redireccion a logs en el cron, pero basicamente ejecuta: systemctl disable sshguard; systemctl stop sshguard;

- name: "Fix SSH timeout - Stop and Disable sshguard service"
  become: yes #sudo
  service:
    name: sshguard
    state: stopped
    enabled: "{{gcp_inst_fix_ssh_sshguard_enabled}}"
  when:
    - gcp_inst_fix_sshguard_timeout is defined
    - gcp_inst_fix_sshguard_timeout == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla

-
  name: "Fix SSH timeout - Schedule Stop and Disable sshguard service at Reboot"
  become: yes #sudo
  cron:
    name: gcp-sshguard-timeout-fix
    state: present
    special_time: reboot
    job: sleep {{gcp_inst_fix_sshguard_timeout_sleep}}; NAVENT_LOG_SCHEDULE_SSH_TIMEOUT_FIX=`systemctl disable sshguard 2>&1`; NAVENT_LOG_SCHEDULE_SSH_TIMEOUT_FIX+=`systemctl stop sshguard 2>&1`; echo $NAVENT_LOG_SCHEDULE_SSH_TIMEOUT_FIX > "/tmp/schedule-gcp-sshguard-timeout-fix-`date +%Y-%m-%d-%H-%M-%S`.log";
  when:
    - gcp_inst_fix_sshguard_timeout is defined
    - gcp_inst_fix_sshguard_timeout == true
    - gcp_inst_fix_sshguard_timeout_schedule is defined
    - gcp_inst_fix_sshguard_timeout_schedule == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla



# Fix para problema de falla de resolucion de dominios DNS en instancias GCP
# NOTA: puede confundir un poco las redireccion a logs en el cron, pero basicamente ejecuta: systemctl enable systemd-resolved; systemctl restart systemd-resolved;

- 
  name: "Fix DNS resolution fail - Enable and Restart service 'systemd-resolved' (DNS)"
  become: yes #sudo
  systemd:
    name: systemd-resolved
    state: restarted
    enabled: "{{gcp_inst_fix_ssh_sd_resolved_enabled}}"
  when:
    - gcp_inst_fix_dns_resolution_fail is defined
    - gcp_inst_fix_dns_resolution_fail == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla

-
  name: "Fix DNS resolution fail - Schedule Enable and Restart service 'systemd-resolved' (DNS) at Reboot"
  become: yes #sudo
  cron:
    name: gcp-dns-resolution-fail-fix
    state: present
    special_time: reboot
    job: sleep {{gcp_inst_fix_dns_resolution_fail_sleep}}; NAVENT_LOG_SCHEDULE_DNS_RES_FAIL_FIX=`systemctl enable systemd-resolved 2>&1`; NAVENT_LOG_SCHEDULE_DNS_RES_FAIL_FIX+=`systemctl restart systemd-resolved 2>&1`; echo $NAVENT_LOG_SCHEDULE_DNS_RES_FAIL_FIX > "/tmp/schedule-gcp-dns-resolution-fail-fix-`date +%Y-%m-%d-%H-%M-%S`.log";
  when:
    - gcp_inst_fix_dns_resolution_fail is defined
    - gcp_inst_fix_dns_resolution_fail == true
    - gcp_inst_fix_dns_resolution_fail_schedule is defined
    - gcp_inst_fix_dns_resolution_fail_schedule == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla


# Fix para problema de freeze de procesos de apt y dpkg debido a diferentes motivos, pero el mas comun es alguna instalacion interactiva que haya quedado corriendo en background.
# NOTA: puede confundir un poco las redireccion a logs en el cron, pero basicamente ejecuta 3 comandos: 
#       sudo killall --verbose --regexp '^apt.*'
#       sudo killall --verbose --regexp '^dpkg.*'
#       sudo UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive dpkg --configure -a --force-confdef --force-confold

- 
  name: "Fix DPKG/APT hang - Stop DPKG/APT process and reconfigure DPKG"
  become: yes #sudo
  command: "{{item}}"
  with_items: 
    - "killall --regexp '^apt.*'"
    - "killall --regexp '^dpkg.*'"
    - "UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive dpkg --configure -a --force-confdef --force-confold"
  when:
    - gcp_inst_fix_dpkg_apt_hang is defined
    - gcp_inst_fix_dpkg_apt_hang == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla

- name: "Fix DPKG/APT hang - Schedule stop DPKG/APT process and reconfigure DPKG at Reboot"
  become: yes #sudo
  cron:
    name: gcp-dpkg-apt-hang-fix
    state: present
    special_time: reboot
    job: sleep {{gcp_inst_fix_dpkg_apt_hang_sleep}}; NAVENT_LOG_SCHEDULE_DPKG_APT_HANG_FIX=`killall --verbose --regexp '^apt.*'` ; NAVENT_LOG_SCHEDULE_DPKG_APT_HANG_FIX+=`killall --verbose --regexp '^dpkg.*'` ; NAVENT_LOG_SCHEDULE_DPKG_APT_HANG_FIX+=`UCF_FORCE_CONFOLD=1 DEBIAN_FRONTEND=noninteractive dpkg --configure -a --force-confdef --force-confold 2>&1`; echo $NAVENT_LOG_SCHEDULE_DPKG_APT_HANG_FIX > "/tmp/schedule-gcp-dpkg-apt-hang-fix-`date +%Y-%m-%d-%H-%M-%S`.log";
  when:
    - gcp_inst_fix_dpkg_apt_hang is defined
    - gcp_inst_fix_dpkg_apt_hang == true
    - gcp_inst_fix_dpkg_apt_hang_schedule is defined
    - gcp_inst_fix_dpkg_apt_hang_schedule == true
  ignore_errors: true # ignora errores de la tarea
  failed_when: false # no marca como "failed" si falla
